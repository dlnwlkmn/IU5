#include <iostream> 
#include <iomanip>
using namespace std;
int nper, nsw;						//счётчики nper-сравнения, nsw-перестановки.
int nper1, nper2, nper3, nper4;		//переменные для вывода
int nsw1, nsw2, nsw3, nsw4;			//таблицы(отчёта) в конце.

//-----------------------------------------------------------------------------------------прототипы функций----------------------------------------------------------------------------------------------
void menu(int&, int&, int[], int);					//меню
void tab(int, int, int, int, int, int, int, int);	//таблица
void automatic(int[], int);							//автозаполнение
void manual(int[], int);							//ручное заполнение
void swap(int[], int, int);							//ПЕРЕСТАНОВКА
void sortBubble(int[], int, int&);					//пузырёк
void maxi(int[], int);								//максимум
void mini(int[], int);								//минимум
////////////////////////////////////////////////////////////////////////////////////////////////MAIN//////////////////////////////////////////////////////////////////////////////////////////////////////
int main()
{
	setlocale(LC_ALL, "ru");
	char exit, ans;
	int j = 1;
	cout << "////////////////////////////////////////////////////////////////////////////////";
	do
	{
		cout << "////////////////////////////////////////////////////////////////////////////////" << endl;
		cout << j << ") ";
		srand(10);
		int metod = 0, way = 0;
		const int n = 15;
		int a[n];
		menu(metod,way,a,n);			//фукция Меню				
		switch (metod)
		{
		case 1: sortBubble(a, n, way); break;
		case 2: 
			if (way == 1) maxi(a, n); 
			if (way == 2) mini(a, n); break;
		default: cout << "	 Попробуте по новой...\n";
			break;
		}
		cout << "	(*) Хотите повторить? (y/n): ";
		cin >> exit;
		cout << endl;
		j++;
	} while (exit == 'y');
	cout << endl;
	cout << "	Хотите отчёт? (y/n): ";
	cin >> ans;
	if (ans == 'y')
	{
		tab(nsw1, nsw2, nsw3, nsw4, nper1, nper2, nper3, nper4);	//функция Таблица
	}
	system("pause");
	return 0;
}

//----------------------------------------------------------------------------------------------меню------------------------------------------------------------------------------------------------------
void menu(int &metod, int &way, int a[], int n)
{
	int b;
	cout << "Сортировка массива a[15]:\n\n";
	cout << "	|Автоматически (1)\n	|Вручную (2)\n	|Заполнять массив: ";
	do
	{
		cin >> b;
		if (b != 1 && b != 2) cout << "	*Неправильно, Введите ещё раз!\n";
	} while (b != 1 && b != 2);
	if (b == 1)
	{
		automatic(a, n);
	}
	if (b == 2)
	{
		manual(a, n);
	}
	cout << "	|Пузырьком (1)\n	|МиниМаксом (2)\n	|Выбирите метод сортировки: ";
	cin >> metod;
	cout << "\n	|Возрастанию (1)\n	|Убыванию (2)\n	|Сортировать по: ";
	cin >> way;
	cout << "\n";
}
//---------------------------------------------------------------------------------------------ТАБЛИЦА----------------------------------------------------------------------------------------------------
void tab(int a, int b, int c, int d, int a1, int b1, int c1, int d1)
{
	cout << endl << "////////////////////////////////////////////////////////////////////////////////";
	cout << "////////////////////////////////////////////////////////////////////////////////" << endl;
	cout << "	" << fixed << setw(16) << "Пузырь(up)" << setw(15) << "Пузырь(down)" << setw(10) << "maximum" << setw(10) << "minimum" << endl;
	cout << "	" << fixed << "comps:" << setprecision(2) << setw(5) << a1 << setprecision(2) << setw(13) << b1 << setprecision(2) << setw(14) << c1 << setprecision(2) << setw(10) << d1 << endl;
	cout << "	" << fixed << "swaps:" << setprecision(2) << setw(5) << a << setprecision(2) << setw(13) << b << setprecision(2) << setw(14) << c << setprecision(2) << setw(10) << d << endl;
	cout << endl;
	if (a1 < c1)
	{
		if (a1 > c1)
		{
			cout << "*** Метод макимума имеет меньше сравнение чем Пузырёк по возрастанию,\n";
			if (a > c) 
			{
				cout << "    и при этом меньше перестановок\n";
			}
			else
			{
				cout << "    но при этом больше перестановок\n";
			}
		}
		else
		{
			cout << "*** Метод макимума имеет больше сравнение чем Пузырёк по возрастанию,\n";
			if (a > c)
			{
				cout << "    но при этом меньше перестановок\n";
			}
			else
			{
				cout << "    и при этом больше перестановок\n";
			}
		}
	}
	if (b1 < d1)
	{
		if (b1 > d1)
		{
			cout << "*** Метод минимума имеет меньше сравнение чем Пузырёк по возрастанию,\n";
			if (b > d)
			{
				cout << "    и при этом меньше перестановок\n";
			}
			else
			{
				cout << "    но при этом больше перестановок\n";
			}
		}
		else
		{
			cout << "*** Метод минимума имеет больше сравнение чем Пузырёк по убыванию,\n";
			if (b > d)
			{
				cout << "    но при этом меньше перестановок\n";
			}
			else
			{
				cout << "    и при этом больше перестановок\n";
			}
		}
	}
	cout << endl;
	cout << "(*) Таким образом выясняется, что методы минимума и максимума\n в общем справляются с сортировкой массивов быстрее\n чем метод пузырькогого всплытия!" << endl << endl;
	cout << endl << "////////////////////////////////////////////////////////////////////////////////";
	cout << "////////////////////////////////////////////////////////////////////////////////" << endl << endl;
	}

//--------------------------------------------------------------------------------------auto заполнение массива-------------------------------------------------------------------------------------------
void automatic(int a[], int n)
{
	for (int i = 0; i < n; i++)
	{
		a[i] = rand()%200-100;
	}
	cout << "	 Массив: \n	 a[15] = { ";
	for (int i = 0; i < n; i++)
	{
		cout << a[i] << " ";
	}
	cout << "};\n\n";
}
//-------------------------------------------------------------------------------------ручное заполнение массива------------------------------------------------------------------------------------------
void manual(int a[], int n)
{
	int e;
	cout << "	Введите " << n << " элементов массива(через Enter): \n";
	for (int i = 0; i < n; i++)
	{
		cout << i + 1 << ") ";
		cin >> e;
		a[i] = e;
	}
	cout << "	 \n	Массив: \n	 a[15] = { ";
	for (int i = 0; i < n; i++)
	{
		cout << a[i] << " ";
	}
	cout << "};\n\n";		
}
//-------------------------------------------------------------------------------------------ПЕРЕСТАНОВКА-------------------------------------------------------------------------------------------------
void swap(int a[], int n, int var)
{
	var = a[n + 1];
	a[n + 1] = a[n];
	a[n] = var;
}
//-----------------------------------------------------------------------------------функция сортировки пузырьком-----------------------------------------------------------------------------------------
void sortBubble(int a[], int n, int &way)
{
	int g;
	int rate = 0;	//для вывода "по убыванию/возростанию"
	nper = 0; nsw = 0;
	for (int i = 0; i < n - 1; i++)
	{
		int var = 0;
		int stop = false;
		for (int j = 0; j < n - 1; j++)
		{
			if (way == 1)
			{
				if (a[j] > a[j + 1])
				{
					swap(a, j, var);
					stop = true;
					nsw++;	g = 1;	rate = 1;
				}
			}
			if (way == 2)
			{
				if (a[j] < a[j + 1])
				{
					swap(a, j, var);
					stop = true;
					nsw++;	g = 1;	rate = 2;
				}
			}
			if (way != 1 && way != 2)
			{
				g = 0;
				cout << "	 Попробуте по новой...\n";
				system("pause");
				cout << "\n";
				break;
			}
		}
		if (!stop) break;
		nper++;
	}
	if (g == 1)
	{
		cout << "	Массив отсортирован методом 'пузырька'";
		if (rate == 1) cout << "по возрастанию: \n";
		if (rate == 2) cout << "по убыванию: \n";
		cout << "	a[15] = { ";
		for (int i = 0; i < n; i++)
		{
			cout << a[i] << " ";
		}
		cout << "};\n";
		cout << "	Кол-во сравнений: " << nper << " \n	Кол-во перестановок: " << nsw << endl << endl;
		if (way == 1)
		{
			nsw1 = nsw;
			nper1 = nper;
		}
		else
		{
			nsw2 = nsw;
			nper2 = nper;
		}
	}
}
//----------------------------------------------------------------------------------функция сортировки "максимумом"---------------------------------------------------------------------------------------
void maxi(int a[], int n)
{
	int q = n;
	nper = 0; nsw = 0;
	for (int i = 0; i < n; n--)
	{
		int imax = 0, t;
		for (int j = 1; j < n; j++)
		{
			if (a[j] > a[imax]) imax = j;
		}
		if (a[n - 1] != a[imax])
		{

			t = a[n - 1];
			a[n - 1] = a[imax];
			a[imax] = t;
			nsw++;
		}
		nper++;
	}
	cout << "	Массив отсортирован методом 'максимума'(по возрастанию): \n";
	cout << "	a[15] = { ";
	for (int i = 0; i < q; i++)
	{
		cout << a[i] << " ";
	}
	cout << "};\n";
	cout << "	Кол-во сравнений: " << nper << " \n	Кол-во перестановок: " << nsw << endl << endl;
	nsw3 = nsw; nper3 = nper;
}
//----------------------------------------------------------------------------------функция сортировки "минимумом"----------------------------------------------------------------------------------------
void mini(int a[], int n)
{
	int q = n;
	nper = 0; nsw = 0;
	for (int i = 0; i < n; n--)
	{
		int imin = 0, t;
		for (int j = 1; j < n; j++)
		{
			if (a[j] < a[imin]) imin = j;
		}
		if (a[n - 1] != a[imin])
		{

			t = a[n - 1];
			a[n - 1] = a[imin];
			a[imin] = t;
			nsw++;
		}
		nper++;
	}
	cout << "	Массив отсортирован методом 'минимума'(по убыванию): \n";
	cout << "	a[15] = { ";
	for (int i = 0; i < q; i++)
	{
		cout << a[i] << " ";
	}
	cout << "};\n";
	cout << "	Кол-во сравнений: " << nper << " \n	Кол-во перестановок: " << nsw << endl << endl;
	nsw4 = nsw; nper4 = nper;
}
//-----------------------------------------------------------------------------------------------END------------------------------------------------------------------------------------------------------
